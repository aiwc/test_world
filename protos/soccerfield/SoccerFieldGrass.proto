#VRML_SIM R2019a utf8
#Author(s):         Inbae Jeong, Chansol Hong
#Maintainer:        Chansol Hong (cshong@rit.kaist.ac.kr)
# tags: static

PROTO SoccerFieldGrass [
  field SFVec3f    translation 0 0 0
  field SFRotation rotation 0 1 0 0
  field SFVec3f    scale 1 1 1

  # fields specific to SoccerField
  field SFFloat  blockSize 0.25
  field SFFloat  length 4.6
  field SFFloat  width 3.4

  # fields specific to the floor logo
  field SFBool   useBanner TRUE
  field SFString url "textures/logo.png"
  field SFFloat  bannerLength 0.3
  field SFFloat  bannerWidth  1.2
  field SFFloat  bannerHeight 0.0004
]
{
  %{
    local bs = fields.blockSize.value
    local l  = fields.length.value
    local w  = fields.width.value

    local bn = math.floor(l / (2 * bs))
    local ll = math.max(0, l / 2 - bs * bn)

    local ub = fields.useBanner.value
    local url = fields.url.value
    local bl = fields.bannerLength.value
    local bw = fields.bannerWidth.value
    local bh = fields.bannerHeight.value
  }%
  Slot {
    type "soccer_field_grass"
    endPoint Transform {
      translation IS translation
      rotation IS rotation
      scale IS scale
      children [
        %{ local m = 1 }%
        %{ for k = 0, 1 do }%
          %{ for i = 0, bn - 1 do }%
          Transform {
            translation %{=m * (i * bs + bs / 2)}% 0 0
            children [
              Shape {
                %{
                  local color
                  if i % 2 == k then
                  color = 'LightGreen'
                  else
                  color = 'DarkGreen'
                  end
                }%
                appearance %{=color}% { }
                geometry Plane {
                  size %{=bs}% %{=w}%
                }
              }
            ]
          }
          %{ end }%

          %{ if ll > 0 then }%
          Transform {
            translation %{=m * (bn * bs + ll / 2)}% 0 0
            children [
              Shape {
                %{
                  local color
                  if bn % 2 == k then
                  color = 'LightGreen'
                  else
                  color = 'DarkGreen'
                  end
                }%
                appearance %{=color}% { }
                geometry Plane {
                  size %{=ll}% %{=w}%
                }
              }
            ]
          }
          %{ end }%

          %{ m = -1 }%
        %{ end }%
        %{ if ub then}%
        %{ for i = -1, 1, 2 do }%
        %{ for j = -1, 1, 2 do }%
          Transform {
            %{
              local bias
              if j < 0 then
                bias = w/24
              else
                bias = w/24
              end
            }%
            translation %{=i*(l/2 - ll/2)}% %{=bh}% %{=j*(w/3.5) - bias}%
            rotation 0 1 0 %{=-i*math.pi/2}%
            children [
              Shape {
                appearance Appearance {
                  material Material {
                    ambientIntensity 1
                    diffuseColor 1 1 1
                  }
                  texture ImageTexture {
                    url [
                      "%{=url}%"
                    ]
                  }
                }
                geometry Plane {
                  size %{=bw}% %{=bl}%
                }
              }
            ]
          }
        %{ end }%
        %{ end }%
        %{ end }%
      ]
    }
  }
}
